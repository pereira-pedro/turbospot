{"version":3,"sources":["webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,utC;;;;;;;;;;;;;;;;;;;ACAwC;AACe;AAEE;AAEzD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC5C,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACjBW;AACM;AACM;AACI;AACU;AACT;AAa1D;IAAA;IAAyB,CAAC;IAAb,UAAU;QAXtB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAc;aACf;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAmB;gBACnB,8EAAqB;gBACrB,sEAAiB;aAClB;SACF,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH;;;;;;;;;;;;AClBvB,mCAAmC,mBAAmB,KAAK,0BAA0B,oBAAoB,6BAA6B,KAAK,8BAA8B,kBAAkB,KAAK,mDAAmD,mjB;;;;;;;;;;;;;;;;;;;ACAtL;AACO;AAGZ;AAMxD;IAME,wBACS,WAAwB,EACvB,WAAwB;QADzB,gBAAW,GAAX,WAAW,CAAa;QACvB,gBAAW,GAAX,WAAW,CAAa;QAPlC,cAAS,GAAG,KAAK,CAAC;IAQf,CAAC;IAEJ,iCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW;aAClC,qBAAqB,EAAE;aACvB,SAAS,CAAC,oBAAU;YACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9E,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAlCU,cAAc;QAJ1B,+DAAS,CAAC;YACT,sJAAqC;;SAEtC,CAAC;+EAQsB,qEAAW;YACV,0DAAW;OARvB,cAAc,CAmC1B;IAAD,qBAAC;CAAA;AAnC0B","file":"auth-auth-module-es5.js","sourcesContent":["module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Entrar no sistema</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onLogin()\\\" *ngIf=\\\"!isLoading\\\">\\n      <div class=\\\"login-container\\\">\\n        <mat-form-field hintLabel=\\\"Use apenas números e letras sem acentos.\\\">\\n          <input\\n            matInput\\n            type=\\\"text\\\"\\n            formControlName=\\\"login\\\"\\n            placeholder=\\\"Login do usuário\\\"\\n          />\\n          <mat-error *ngIf=\\\"form.get('login').invalid\\\"\\n            >Entre com o login do usuário.</mat-error\\n          >\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input\\n            matInput\\n            type=\\\"password\\\"\\n            formControlName=\\\"password\\\"\\n            placeholder=\\\"Senha do usuário\\\"\\n          />\\n          <mat-error *ngIf=\\\"form.get('password').invalid\\\"\\n            >Entre com o senha do usuário.</mat-error\\n          >\\n        </mat-form-field>\\n      </div>\\n      <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">\\n        Entrar\\n      </button>\\n    </form>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","module.exports = \"\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.login-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.login-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4ubG9naW4tY29udGFpbmVyID4gKiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  form: FormGroup;\n\n  private authStatusSub: Subscription;\n\n  constructor(\n    public authService: AuthService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n\n    this.form = this.formBuilder.group({\n        login: ['', [Validators.required, Validators.minLength(3)]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onLogin() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.execLogin(this.form.value.login, this.form.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n}\n"],"sourceRoot":""}