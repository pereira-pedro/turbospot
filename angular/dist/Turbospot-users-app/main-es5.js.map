{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/error/error.component.html","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/users/user-edit/user-edit.component.html","webpack:///./src/app/users/users-list/users-list.component.html","webpack:///./src/app/utils/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/utils/info-window/info-window.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app-utils.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/users/user-edit/user-edit.component.css","webpack:///./src/app/users/user-edit/user-edit.component.ts","webpack:///./src/app/users/users-list/users-list.component.css","webpack:///./src/app/users/users-list/users-list.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/app/utils/confirmation-dialog/confirmation-dialog.component.css","webpack:///./src/app/utils/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/utils/info-window/info-window.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<app-menu></app-menu>\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"<div mat-dialog-content>\\r\\n  <p class=\\\"mat-body-1\\\">{{ data.message }}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Ok</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>Turbo Spot Users</span>\\n    <span class=\\\"top-menu-spacer\\\"></span>\\n    <mat-icon\\n      class=\\\"top-menu-icon\\\"\\n      [matMenuTriggerFor]=\\\"menuSetup\\\"\\n      aria-hidden=\\\"false\\\"\\n      aria-label=\\\"Setup icon\\\"\\n      *ngIf=\\\"userIsAuthenticated\\\"\\n      >menu</mat-icon\\n    >\\n    <mat-menu #menuSetup=\\\"matMenu\\\">\\n      <button mat-menu-item (click)=\\\"onListUsers()\\\" *ngIf=\\\"userIsAuthenticated\\\">Usuários</button>\\n      <button mat-menu-item (click)=\\\"onLogout()\\\" *ngIf=\\\"userIsAuthenticated\\\">Encerrar {{userFullname}}</button>\\n    </mat-menu>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Usuário</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onSaveUser()\\\" *ngIf=\\\"!isLoading\\\" autocomplete=\\\"off\\\">\\r\\n      <div class=\\\"edit-user-container\\\">\\r\\n        <mat-form-field hintLabel=\\\"Nome completo do usuário.\\\">\\r\\n          <input\\r\\n            matInput\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"fullname\\\"\\r\\n            placeholder=\\\"Nome\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"form.get('fullname').invalid\\\"\\r\\n            >Entre com o nome completo do usuário.</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n        <mat-form-field\\r\\n          hintLabel=\\\"Use apenas números e letras sem acentos.\\\"\\r\\n        >\\r\\n          <input\\r\\n            matInput\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"login\\\"\\r\\n            placeholder=\\\"Login do usuário\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"form.get('login').invalid\\\"\\r\\n            >Entre com o login do usuário.</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            type=\\\"password\\\"\\r\\n            formControlName=\\\"password\\\"\\r\\n            placeholder=\\\"Senha do usuário\\\"\\r\\n            autocomplete=\\\"off\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"form.get('password').invalid\\\"\\r\\n            >Entre com o senha do usuário.</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            type=\\\"password\\\"\\r\\n            formControlName=\\\"confirmPassword\\\"\\r\\n            placeholder=\\\"Confirmação da senha\\\"\\r\\n            autocomplete=\\\"off\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"form.get('confirmPassword').invalid\\\">\\r\\n            A confirmação da senha é inválida.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Tipo do usuário</mat-label>\\r\\n          <mat-select formControlName=\\\"type\\\" required>\\r\\n            <mat-option *ngFor=\\\"let type of userTypes\\\" [value]=\\\"type.value\\\">\\r\\n              {{ type.viewValue }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"form.get('type').invalid\\\"\\r\\n            >Tipo de usuário inválido.</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">\\r\\n        Grava\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" mat-button color=\\\"warn\\\" (click)=\\\"onDelete()\\\">\\r\\n        Remove\\r\\n      </button>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <button mat-fab class=\\\"md-fab-bottom-right\\\" color=\\\"accent\\\" aria-label=\\\"Adicionar usuário.\\\" (click)=\\\"onAddUser()\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n\\n  <mat-table [dataSource]=\\\"users\\\" class=\\\"mat-elevation-z6\\\">\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"fullname\\\">\\n      <mat-header-cell *matHeaderCellDef> Nome Completo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{ row.fullname }} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Login Column -->\\n    <ng-container matColumnDef=\\\"login\\\">\\n      <mat-header-cell *matHeaderCellDef> Login </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{ row.login }} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Type Column -->\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <mat-header-cell *matHeaderCellDef> Tipo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{ row.type }} </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\" (click)=\\\"onEditUser(row.login)\\\"></mat-row>\\n  </mat-table>\\n</div>\\n<br/>\\n<mat-paginator\\n  [length]=\\\"totalUsers\\\"\\n  [pageSize]=\\\"usersPerPage\\\"\\n  [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n  (page)=\\\"onChangedPage($event)\\\"\\n  *ngIf=\\\"users.length > 0\\\"\\n>\\n</mat-paginator>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"users.length <= 0 && !isLoading\\\">\\n  Não há nenhum usuário inserido.\\n</p>\\n\"","module.exports = \"<mat-dialog-content>{{ message }}</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Não</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Sim</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\"","var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTableModule,\r\n  MatSelectModule,\r\n  MatIconModule,\r\n  MatMenuModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatMenuModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UsersListComponent } from './users/users-list/users-list.component';\r\nimport { UserEditComponent } from './users/user-edit/user-edit.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n// { path: 'edit/:userId', component: UserEditComponent, canActivate: [AuthGuard] },\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: UsersListComponent, canActivate: [AuthGuard] },\r\n  { path: 'users/create', component: UserEditComponent, canActivate: [AuthGuard] },\r\n  { path: 'users/edit/:login', component: UserEditComponent, canActivate: [AuthGuard] },\r\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ConfirmationDialogComponent } from './utils/confirmation-dialog/confirmation-dialog.component';\r\nimport { InfoWindowComponent } from './utils/info-window/info-window.component';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule\r\n  ],\r\n  declarations: [ConfirmationDialogComponent, InfoWindowComponent],\r\n  exports: [\r\n    ConfirmationDialogComponent,\r\n    InfoWindowComponent\r\n  ],\r\n  entryComponents: [ConfirmationDialogComponent, InfoWindowComponent]\r\n})\r\nexport class AppUtilsModule {}\r\n","module.exports = \"main{\\r\\n  width: 80%;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWlue1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAxcmVtIGF1dG87XHJcbn1cclxuIl19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Turbospot-users-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { UsersModule } from './users/users.module';\nimport { AppUtilsModule } from './app-utils.module';\n\n@NgModule({\n  declarations: [AppComponent, MenuComponent, ErrorComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    AppUtilsModule,\n    UsersModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        const isAuth = this.authService.getIsAuth();\r\n        if ( !isAuth ) {\r\n          this.router.navigate(['/auth/login']);\r\n        }\r\n        return isAuth;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AuthData } from './auth-data.model';\r\n\r\nimport { environment } from '../../environments/environment';\r\nconst BACKEND_URL = environment.apiUrl + '/users/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private fullname: string;\r\n  private login: string;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getUserFullname() {\r\n    return this.fullname;\r\n  }\r\n\r\n  getUserLogin() {\r\n    return this.login;\r\n  }\r\n\r\n  execLogin(login: string, password: string) {\r\n    const authData: AuthData = {\r\n      login,\r\n      password\r\n    };\r\n\r\n    this.http\r\n      .post<{ token: string, expiresIn: number, id: string, fullname: string, login: string }>(\r\n        BACKEND_URL + 'login',\r\n        authData\r\n      )\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if ( token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.userId = response.id;\r\n          this.login = response.login;\r\n          this.fullname = response.fullname;\r\n          this.authStatusListener.next(true);\r\n          this.saveAuthData(token, new Date(new Date().getTime() + expiresInDuration * 1000), this.userId, this.fullname, this.login);\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if ( !authInformation) {\r\n      return;\r\n    }\r\n    const expiresIn = authInformation.expirationDate.getTime() - new Date().getTime();\r\n    if ( expiresIn > 0 ) {\r\n      this.token = authInformation.token;\r\n      this.userId = authInformation.userId;\r\n      this.fullname = authInformation.fullname;\r\n      this.login = authInformation.login;\r\n      this.isAuthenticated = true;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next();\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.clearAuthData();\r\n    clearTimeout(this.tokenTimer);\r\n    this.userId = null;\r\n    this.router.navigate(['/auth/login']);\r\n    console.log('logged out');\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string, fullname, login) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n    localStorage.setItem('fullname', fullname);\r\n    localStorage.setItem('login', login);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('fullname');\r\n    localStorage.removeItem('login');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    const fullname = localStorage.getItem('fullname');\r\n    const login = localStorage.getItem('login');\r\n    if ( token && expirationDate) {\r\n      return {\r\n        token,\r\n        expirationDate: new Date(expirationDate),\r\n        userId,\r\n        fullname,\r\n        login\r\n      };\r\n    }\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpErrorResponse,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { InfoWindowComponent } from './utils/info-window/info-window.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog, private infoWindow: InfoWindowComponent) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      tap(event => {\r\n        if (event instanceof HttpResponse) {\r\n          if (event.status === 200) {\r\n            console.log(event.body.message);\r\n            if (event.body.message) {\r\n              this.infoWindow.open(event.body.message, 'Ok');\r\n            }\r\n          }\r\n        }\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'Erro desconhecido.';\r\n\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\r\n}\r\n","module.exports = \".top-menu-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.top-menu-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS9tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvcC1tZW51LWljb24ge1xyXG4gIHBhZGRpbmc6IDAgMTRweDtcclxufVxyXG5cclxuLnRvcC1tZW51LXNwYWNlciB7XHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  userId: string;\n  userFullname: string;\n  userLogin: string;\n\n  private authStatusSub: Subscription;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n        this.userFullname = this.authService.getUserFullname();\n        this.userLogin = this.authService.getUserLogin();\n      }));\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  onListUsers() {\n    this.router.navigate(['/']);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","module.exports = \"\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.edit-user-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.edit-user-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlci1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC91c2Vycy91c2VyLWVkaXQvdXNlci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLmVkaXQtdXNlci1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmVkaXQtdXNlci1jb250YWluZXIgPiAqIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { UsersService } from '../users.service';\r\nimport { User } from '../user.model';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { ConfirmationDialogComponent } from '../../utils/confirmation-dialog/confirmation-dialog.component';\r\n\r\nimport { MatDialog } from '@angular/material';\r\n\r\nexport interface UserTypes {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.css']\r\n})\r\nexport class UserEditComponent implements OnInit, OnDestroy {\r\n  user: User;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n\r\n  userTypes: UserTypes[] = [\r\n    { value: 'admin', viewValue: 'Administrador' },\r\n    { value: 'teacher', viewValue: 'Professor' },\r\n    { value: 'student', viewValue: 'Aluno' }\r\n  ];\r\n\r\n  private mode = 'create';\r\n  private login: string;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(\r\n    public usersService: UsersService,\r\n    public route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private dialog: MatDialog,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      });\r\n\r\n    this.form = this.formBuilder.group({\r\n        fullname: ['', [Validators.required, Validators.minLength(3)]],\r\n        login: ['', [Validators.required, Validators.minLength(3)]],\r\n        type: ['', Validators.required],\r\n        password: ['', [Validators.required, Validators.minLength(6)]],\r\n        confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    }, {\r\n        validator: MustMatch('password', 'confirmPassword', this.mode)\r\n    });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('login')) {\r\n        this.mode = 'edit';\r\n        this.login = paramMap.get('login');\r\n        this.isLoading = true;\r\n\r\n        const passwordControl = this.form.get('password');\r\n        passwordControl.clearValidators();\r\n\r\n        const confirmationControl = this.form.get('confirmPassword');\r\n\r\n        confirmationControl.clearValidators();\r\n        this.usersService.getUserByLogin(this.login).subscribe(userData => {\r\n          this.isLoading = false;\r\n\r\n          this.user = {\r\n            id: userData[0].id,\r\n            fullname: userData[0].fullname,\r\n            login: userData[0].login,\r\n            type: userData[0].type,\r\n            password: '',\r\n            confirmation: ''\r\n          };\r\n          this.form.setValue({\r\n            fullname: this.user.fullname,\r\n            login: this.user.login,\r\n            password: null,\r\n            type: this.user.type,\r\n            confirmPassword: null\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.login = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveUser() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      this.usersService.addUser(\r\n        this.form.value.fullname,\r\n        this.form.value.login,\r\n        this.form.value.password,\r\n        this.form.value.type\r\n      );\r\n    } else {\r\n      this.usersService.updateUser(\r\n        this.user.id,\r\n        this.form.value.fullname,\r\n        this.form.value.login,\r\n        this.form.value.type,\r\n        this.form.value.password === null ? '' : this.form.value.password\r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  onDelete() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: '350px',\r\n      data: 'Confirma a exclusão deste usuário?'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.usersService.deleteUser(this.user.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPasswords(form: FormGroup) {\r\n    // here we have the 'passwords' group\r\n    const pass = form.controls.password.value;\r\n    const confirmPass = form.controls.confirmPass.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string, formMode: string) {\r\n  return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n          // return if another validator has already found an error on the matchingControl\r\n          return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value && formMode === 'create') {\r\n          matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n          matchingControl.setErrors(null);\r\n      }\r\n  };\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.md-fab-bottom-right{\\r\\n  position: fixed !important;\\r\\n  right: 30px; /* Add this and change value to set the margin you want */\\r\\n  bottom: 30px;\\r\\n}\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: lightgray;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMtbGlzdC91c2Vycy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsV0FBVyxFQUFFLHlEQUF5RDtFQUN0RSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWxpc3QvdXNlcnMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWQtZmFiLWJvdHRvbS1yaWdodHtcclxuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcclxuICByaWdodDogMzBweDsgLyogQWRkIHRoaXMgYW5kIGNoYW5nZSB2YWx1ZSB0byBzZXQgdGhlIG1hcmdpbiB5b3Ugd2FudCAqL1xyXG4gIGJvdHRvbTogMzBweDtcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material';\n\nimport { User } from '../user.model';\nimport { UsersService } from '../users.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit, OnDestroy {\n  users: User[] = [];\n  isLoading = false;\n  totalUsers = 0;\n  usersPerPage = 20;\n  currentPage = 1;\n  pageSizeOptions = [10, 50, 100];\n  userIsAuthenticated = false;\n  currentUserId: string;\n\n  displayedColumns: string[] = ['fullname', 'login', 'type'];\n\n  private usersSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public usersService: UsersService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.usersService.getUsers(this.usersPerPage, this.currentPage);\n    this.currentUserId = this.authService.getUserId();\n    this.usersSub = this.usersService\n      .getUserUpdateListener()\n      .subscribe((userData: { users: User[]; userCount: number }) => {\n        this.users = userData.users;\n        this.totalUsers = userData.userCount;\n        this.isLoading = false;\n      });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.currentUserId = this.authService.getUserId();\n      });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.usersPerPage = pageData.pageSize;\n    this.usersService.getUsers(this.usersPerPage, this.currentPage);\n  }\n\n  onEditUser(userLogin: string) {\n    this.router.navigate(['/users/edit/', userLogin]);\n  }\n\n  onAddUser() {\n    this.router.navigate(['/users/create/']);\n  }\n\n  ngOnDestroy() {\n    this.usersSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AppUtilsModule } from '../app-utils.module';\r\n\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserEditComponent,\r\n    UsersListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    AppUtilsModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class UsersModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from './user.model';\r\nimport { Response } from '../response.model';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/users/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsersService {\r\n  private users: User[] = [];\r\n  private usersUpdated = new Subject<{ users: User[]; userCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getUsers(usersPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${usersPerPage}&page=${currentPage}`;\r\n    this.http\r\n      .get<Response<User>>(BACKEND_URL + queryParams)\r\n      .pipe(\r\n        map(userData => {\r\n          return {\r\n            data: userData.data.map(user => {\r\n              return {\r\n                id: user.id,\r\n                fullname: user.fullname,\r\n                login: user.login,\r\n                type: user.type,\r\n                password: null,\r\n                confirmation: null\r\n              };\r\n            }),\r\n            maxUsers: userData.data.length\r\n          };\r\n        })\r\n      )\r\n      .subscribe(mappedUsersData => {\r\n        this.users = mappedUsersData.data;\r\n        this.usersUpdated.next({\r\n          users: [...this.users],\r\n          userCount: mappedUsersData.maxUsers\r\n        });\r\n      });\r\n  }\r\n\r\n  getUserUpdateListener() {\r\n    return this.usersUpdated.asObservable();\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get<Response<User>>(BACKEND_URL + id);\r\n  }\r\n\r\n  getUserByLogin(login: string) {\r\n    return this.http.get<User>(BACKEND_URL + login);\r\n  }\r\n\r\n  addUser(fullname: string, login: string, password: string, type: string) {\r\n    const userData = new HttpParams()\r\n      .set('fullname', fullname)\r\n      .set('login', login)\r\n      .set('password', password)\r\n      .set('type', type);\r\n\r\n    this.http\r\n      .post<{ message: string; user: User }>(BACKEND_URL, userData)\r\n      .subscribe(responseData => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  updateUser(\r\n    id: number,\r\n    fullname: string,\r\n    login: string,\r\n    type: string,\r\n    password: string\r\n  ) {\r\n    let userData: User | HttpParams;\r\n\r\n    userData = new HttpParams()\r\n      .set('id', id.toString())\r\n      .set('fullname', fullname)\r\n      .set('login', login)\r\n      .set('type', type)\r\n      .set('password', password);\r\n\r\n    this.http.put(BACKEND_URL + id, userData).subscribe(response => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.http.delete(BACKEND_URL + id).subscribe(response => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".mat-dialog-content {\\r\\n  font-family: 'Roboto'\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbHMvY29uZmlybWF0aW9uLWRpYWxvZy9jb25maXJtYXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvdXRpbHMvY29uZmlybWF0aW9uLWRpYWxvZy9jb25maXJtYXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWRpYWxvZy1jb250ZW50IHtcclxuICBmb250LWZhbWlseTogJ1JvYm90bydcclxufVxyXG4iXX0= */\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-utils-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  templateUrl: './info-window.component.html',\n})\nexport class InfoWindowComponent {\n  public duration: number;\n\n  constructor(private snackBar: MatSnackBar\n  ) {\n    this.duration = 5000;\n  }\n\n  open(message, action) {\n    this.snackBar.open(message, action );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}